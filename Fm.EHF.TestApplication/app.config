<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="peppol.certificates" type="STARTLibrary.src.eu.peppol.start.security.configuration.CertificatesConfigurationSection, STARTLibrary45" />    
  </configSections>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="e:\log\app_messages.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add initializeData="e:\log\app_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <system.serviceModel>
      <diagnostics>
          <messageLogging logEntireMessage="true" logMalformedMessages="true"
              logMessagesAtTransportLevel="true" />
      </diagnostics>
      <behaviors>
          <endpointBehaviors>
              <behavior name="PeppolClientBehavior" />
          </endpointBehaviors>
      </behaviors>
      <bindings>
          <customBinding>
              <binding name="CusomSecureBinding" closeTimeout="00:02:00" openTimeout="00:02:00"
                  sendTimeout="00:10:00">
                  <reliableSession flowControlEnabled="false" reliableMessagingVersion="WSReliableMessaging11" />
                  <security defaultAlgorithmSuite="Basic128" allowSerializedSigningTokenOnReply="true"
                      enableUnsecuredResponse="false" authenticationMode="MutualCertificateDuplex"
                      requireDerivedKeys="false" securityHeaderLayout="Lax" allowInsecureTransport="false"
                      messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
                  <mtomMessageEncoding messageVersion="Soap11WSAddressing10" maxBufferSize="2147483647">
                      <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647"
                          maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
                  </mtomMessageEncoding>
                  <httpsTransport maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647"
                      hostNameComparisonMode="WeakWildcard" maxBufferSize="2147483647" />
              </binding>
          </customBinding>
      </bindings>
      <client>
          <endpoint address="https://yourdomain.com/oxalis/accessPointService"
              behaviorConfiguration="PeppolClientBehavior" binding="customBinding"
              bindingConfiguration="CusomSecureBinding" contract="accesspointService.Resource"
              name="SecurePeppolClient" kind="" endpointConfiguration="" />
      </client>
  </system.serviceModel>
  
  <peppol.certificates>
    <validation>
      <!-- Thumbprints for:         
            - PEPPOL Root TEST CA
            - PEPPOL SERVICE METADATA PUBLISHER TEST CA
            - PEPPOL ACCESS POINT TEST CA 
            
        Disse sertifikata vert brukt til å validere sertifikat. det er rett og slett alle rot-sertifikata vi trenger for å validere sertifikat fra Evry, difi sin smp, vår oxalis, etc.
        Root-sertifikata er lagra i truststore-production.pfx
            -->
      <add name="MyRootCertificates"
           rootCACertificateThumbprint="C55F371D9B3C3A54A06FD51E02E43F9E90F6D65C"
           intermediateSmpCACertificateThumbprint="9C200AB2044F67BA89D9ADE2180CCDE878639470"
           intermediateAcessPointCACertificateThumbprint="696D7543E15F84A32A1121531D0551BCB3AAEA50" />
    </validation>
    <serviceCredentials>
      <add serviceName="SecurePeppolClient">
        <!-- truststore inneheld alle root-sertifikat fra PEPPOL. -->
        <serviceCertificate filename="Certificates\truststore-production.pfx" password="peppol" />
      </add>
    </serviceCredentials>
    <clientCredentials>      
      <add endpointName="SecurePeppolClient">        
        <!-- clientCertificate her identifiserer klienten overfor andre aksesspunkt. Vi trenger private key og virksomheten sitt sertifikat fra PEPPOL for å signere meldinger + identifisere klient-->
        <clientCertificate filename="Certificates\privateKeystore.pfx" password="changeit" />

        <!-- serviceCertificate her identifiserer servicen/aksesspunktet vi snakker med. Sertifikatet her brukes mot aksesspunkt/endpoint konfigurert i WCF-konfigurasjon. Når vi snakker med andre aksesspunkt laster vi ned public key fra peppol sin SML eller SMP e.l., og sertifikatet her blir ikke brukt -->
        <serviceCertificate encoded="ENcoded server certificate"/>
      </add>
    </clientCredentials>
  </peppol.certificates>
</configuration>
